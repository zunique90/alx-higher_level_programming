# Tests for ``matrix_divided`` from 2-matrix_divided.py

------------------------------------------------

# Import function from module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# Check for module docstring:
	>>> print(__import__("2-matrix_divided").__doc__)
	Defines a division function that divides all elements of a matrix

# Check for function docstring:
	>>> print(__import__("2-matrix_divided").matrix_divided.__doc__)
	Divides all elements of matrix by div, returns a new matrix

# Section - ZeroDivisionError:
	>>> print(matrix_divided([[1,2,3], [1.2,2,3]], 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> print(matrix_divided([[1,2,3], [1.2,2,3]], 0.0))
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

# Section - TypeError:
	>>> print(matrix_divided([[1,2,3], [1.2,2,3]], "2"))
        Traceback (most recent call last):
        TypeError: div must be a number

	>>> print(matrix_divided([[1,2,3,4], [1.2,2,3]], "b"))
        Traceback (most recent call last):
        TypeError: div must be a number

	>>> print(matrix_divided([[1,2,3,4], [1.2,2,3]], None))
        Traceback (most recent call last):
        TypeError: div must be a number

	>>> print(matrix_divided([[1,2,3,4], [1.2,2,3]], True))
        Traceback (most recent call last):
        TypeError: div must be a number

	>>> print(matrix_divided([[1,2,3,4], [1.2,2,3]], 2))
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

	>>> print(matrix_divided([[1,"3"], [2,4]], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[1,2,True], [False,5,6.7]], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[1,2,(1,2)], [False,5,6.7]], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([1,3], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[1,3], "Hi"], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([], 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided(None, 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided("not a list", 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> print(matrix_divided([[1,2,3], [1,2,3]], 3, 4))
        Traceback (most recent call last):
        TypeError: matrix_divided() takes 2 positional arguments but 3 were given

	>>> print(matrix_divided([[1,2,3], [1,2,3]]))
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> print(matrix_divided([[1,3], [2,4]]* 2))
        Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> print(matrix_divided())
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Section - Correct matrix/div output:
	>>> print(matrix_divided([[1,2,3], [1,2,3]], 3))
	[[0.33, 0.67, 1.0], [0.33, 0.67, 1.0]]

	>>> print(matrix_divided([[1,2,3], [4,5,6]], 3))
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> print(matrix_divided([[1.1,-2.2,3.3], [4.4,5.5,-6.6]], 3))
        [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

	>>> print(matrix_divided([[3,8], [12,11]], -3))
        [[-1.0, -2.67], [-4.0, -3.67]]

	>>> print(matrix_divided([[1,-2.2,3], [-6.6,7.00,8]], 3))
        [[0.33, -0.73, 1.0], [-2.2, 2.33, 2.67]]

	>>> print(matrix_divided([[3,9], [12,3]], 3.5))
        [[0.86, 2.57], [3.43, 0.86]]

	>>> print(matrix_divided([[3]], 3))
        [[1.0]]

	>>> print(matrix_divided([[]], 3))
        [[]]

	>>> matrix = [[1], [2], [3]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0], [0.0], [0.0]]

	>>> matrix = [[1, float('inf'), 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 1)
	[[1.0, inf, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix = [[1, float('inf'), 3], [4, 5, 6]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, nan, 0.0], [0.0, 0.0, 0.0]]

# Section - Ensure Original matrix is same
	>>> matrix = [[1,2,3], [4,5,6]]
	>>> matrix_divided(matrix, 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix
	[[1, 2, 3], [4, 5, 6]]

# Section - SyntaxError
	>>> print(matrix_divided([[1,3], [2,4]] 2))
        Traceback (most recent call last):
        SyntaxError: invalid syntax

	>>> print(matrix_divided([[1,3], [2,4]]. 2))
        Traceback (most recent call last):
        SyntaxError: invalid syntax

	>>> print(matrix_divided([[1,3], [2,4]], *))
        Traceback (most recent call last):
        SyntaxError: invalid syntax

